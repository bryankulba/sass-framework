

/******************

Mixins

******************/

// This needs to be tweaked, so if no 2x image exists, it won't break.
@mixin replace-text-with-dimensions-for-retina($image) {
	$image-standard: $image + ".png";
	$image-retina: $image + "@2x.png";
	@include replace-text-with-dimensions($image-standard);
	display: block;
	$image-width: image-width($image-standard)/$font-size;
	$image-height: image-height($image-standard)/$font-size;
	background-size: $image-width*1em $image-height*1em;
	width: $image-width*1em;
	height: $image-height*1em;
	@media
	  only screen and (-webkit-min-device-pixel-ratio: 2),
	  only screen and (   -moz-min-device-pixel-ratio: 2),
	  only screen and (     -o-min-device-pixel-ratio: 2),
	  only screen and (        min-device-pixel-ratio: 2),
	  only screen and (                min-resolution: 192dpi),
	  only screen and (                min-resolution: 2dppx) {
		background-image: image-url($image-retina);
		// background-size: image-width($image-retina)/2 image-height($image-retina)/2;
		$retina-image-width: (image-width($image-retina)/2)/$font-size;
		$retina-image-height: (image-height($image-retina)/2)/$font-size;
		background-size: $retina-image-width*1em $retina-image-height*1em;
		width: $retina-image-width*1em;
		height: $retina-image-height*1em;
	}
}

@mixin replace-link-with-dimensions-for-retina($image) {
	$image-standard: $image + ".png";
	$image-retina: $image + "@2x.png";
	@include replace-text-with-dimensions($image-standard);
	display: block;
	width: 100%;
	height: 100%;
	@media
	  only screen and (-webkit-min-device-pixel-ratio: 2),
	  only screen and (   -moz-min-device-pixel-ratio: 2),
	  only screen and (     -o-min-device-pixel-ratio: 2),
	  only screen and (        min-device-pixel-ratio: 2),
	  only screen and (                min-resolution: 192dpi),
	  only screen and (                min-resolution: 2dppx) {
		background-image: image-url($image-retina);
		background-size: image-width($image-retina)/2 image-height($image-retina)/2;
	}
}

@mixin background-retina($image) {
	$image-standard: $image + ".png";
	$image-retina: $image + "@2x.png";
	background-image: image-url($image-standard);
	$image-width: image-width($image-standard)/$font-size;
	$image-height: image-height($image-standard)/$font-size;
	background-size: $image-width*1em $image-height*1em;
	@media
	  (-webkit-min-device-pixel-ratio: 1.3),
	  (   min--moz-device-pixel-ratio: 1.3),
	  (     -o-min-device-pixel-ratio: 2.6/2),
	  (        min-device-pixel-ratio: 1.3),
	  (                min-resolution: 1.3dppx) {
	/* on retina, use image that's scaled by 2 */
		background-image: image-url($image-retina);
		$retina-image-width: (image-width($image-retina)/2)/$font-size;
		$retina-image-height: (image-height($image-retina)/2)/$font-size;
		background-size: $retina-image-width*1em $retina-image-height*1em;
	}
}

@mixin fullscreenbackground($image){
	$background-file-name: $image;
	background-image: image-url($background-file-name);
	background-repeat: no-repeat;
	background-position: center center;
	@include breakpoint($bkpt-1024){
		background-attachment: fixed;
		background-size: cover;
	}
	/* for background-size:cover replacement on iOS devices */
	@media only screen and (orientation: portrait) and (device-width: 320px), (device-width: 768px) {
		-webkit-background-size: auto 150%;
		background-attachment: scroll;
		background-position: top center;
	}
	@media only screen and (orientation: landscape) and (device-width: 320px), (device-width: 768px) {
		-webkit-background-size: 150% auto;
		background-attachment: scroll;
		background-position: top center;
	}
}

@mixin beforeafter{
	content:"";
	display: block;
}

// vertically centers element in its parent (needs position and height declaration)
@mixin vertical-align {
	position: relative;
	top: 50%;
	-webkit-transform: translateY(-50%);
	-ms-transform: translateY(-50%);
	transform: translateY(-50%);
}

%clearfix {
	*zoom: 1;
	&:before {
		content: " ";
		display: table;
	}
	&:after {
		content: " ";
		display: table;
		clear: both;
	}
}

@import "compass/css3/background-size";

@mixin bgnd-retina($file, $type) {
  $image: ($file + '.' + $type);
  background-image: image-url($image);
 
  @media only screen and (-webkit-min-device-pixel-ratio: 2)
  {
    $image2x: ($file + '@2x.' + $type);
    background-image: image-url($image2x);
    @include background-size(image-width($image) auto);
  }
}

@mixin background-image-retina($file, $type) {
  $image: ($file + '.' + $type);
  background-image: image-url($image);
  height: image-height($image);
  width: image-width($image);

  @media only screen and (-webkit-min-device-pixel-ratio: 2)
  {
    $image2x: ($file + '@2x.' + $type);
    background-image: image-url($image2x);
    @include background-size(image-width($image) auto);
  }
}

@mixin image-replacement($file, $type) {
  @include background-image-retina($file, $type);
  background-position: 0 0;
  background-repeat: no-repeat;
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden;
  display: block;
}